{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/contacts-selectors.js","redux/contactsApi.js","redux/contactsOperations.js","components/ContactForm/ContactForm.js","components/ContactLIst/ContactList.js","redux/slice.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","redux/store.js","index.js","components/ContactLIst/ContactList.module.css"],"names":["module","exports","getContacts","state","phoneBook","contacts","getFilter","filter","getVisibleContacts","createSelector","normalizedContacts","toLowerCase","contact","name","includes","fetchContacts","a","axios","get","data","addContact","post","dltContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsApi","message","addContacts","items","deleteContacts","SignupForm","useState","setName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","nameInputId","shortid","generate","numberInputId","handleChange","e","target","value","reset","className","s","forma","onSubmit","preventDefault","find","toast","error","contactsOperations","htmlFor","type","pattern","title","required","onChange","btnsubmit","ContactList","contactList","map","contactItem","contactDescription","deleteBtn","onClick","contactsSlice","createSlice","initialState","isLoading","reducers","changeFilter","action","payload","extraReducers","fulfilled","pending","rejected","console","log","push","actions","Filter","label_filter","Phonebook","useEffect","section","ContactForm","title_contact","length","App","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afc5d486.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__2xsBe\",\"section\":\"Phonebook_section__1t6Bc\",\"title_contact\":\"Phonebook_title_contact__28BOC\",\"filter_label\":\"Phonebook_filter_label__112Tl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forma\":\"ContactForm_forma__1MZkx\",\"btnsubmit\":\"ContactForm_btnsubmit__1zc4C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_filter\":\"Filter_label_filter__x_64U\"};","  \r\nimport { createSelector } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const getContacts = state => state.phoneBook.contacts;\r\n\r\nexport const getIsLoading = state => state.phoneBook.isLoading;\r\n\r\nexport const getFilter = state => state.phoneBook.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedContacts = filter.toLowerCase();\r\n    // console.log(filter);\r\n    return contacts.filter(\r\n      contact =>\r\n        contact.name.toLowerCase().includes(normalizedContacts) \r\n    );\r\n  },\r\n);","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  const { data } = await axios.post('/contacts', contact);\r\n\r\n  return data;\r\n}\r\n\r\nexport async function dltContact(id) {\r\n  await axios.delete(`/contacts/${id}`);\r\n  return id;\r\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport * as contactsApi from './contactsApi';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsApi.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const items = await contactsApi.addContact(contact);\r\n      return items;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await contactsApi.dltContact(id);\r\n      // console.log(id);\r\n\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n","import { useState } from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport shortid from \"shortid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as contactsSelectors from '../../redux/contacts-selectors';\r\nimport * as contactsOperations  from '../../redux/contactsOperations';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SignupForm = () => {\r\n\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n   const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleSubmit = (e) => {\r\n   e.preventDefault();\r\n    const nameInlist = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n   \r\n    if (nameInlist) {\r\n      toast.error(`  '${name}' is already in your list`);\r\n      reset();\r\n      return;\r\n    }\r\n   \r\n    dispatch(contactsOperations.addContacts({ name, number }));\r\n    reset();\r\n  };\r\n \r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.forma}>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor={nameInputId}>\r\n          Name{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n            id={nameInputId}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={numberInputId}>\r\n          Number{\" \"}\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n            id={numberInputId}\r\n          />\r\n        </label>\r\n\r\n        <button className={s.btnsubmit} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n\r\n","import { useEffect } from \"react\";\r\nimport \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { getVisibleContacts } from \"../../redux/contacts-selectors\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport * as contactsSelectors from '../../redux/contacts-selectors';\r\nimport * as contactsOperations  from '../../redux/contactsOperations';\r\n/* import {\r\n  useGetContactsQuery,\r\n  useDeleteContactsMutation,\r\n} from \"../../redux/contactsApi\"; */\r\n\r\nconst ContactList = () => {\r\n   const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  // const stateContact = useSelector(contactsSelectors.selectAll); //new\r\n\r\n  // useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  // const onDeleteContact = (id) => dispatch(actions.deleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      \r\n      <ul className={s.contactList}>\r\n         {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={s.contactItem}>\r\n              <p className={s.contactDescription}>\r\n                {name}: {number}\r\n              </p>\r\n              <button\r\n                className={s.deleteBtn}\r\n                type=\"button\"\r\n                onClick={() => dispatch(contactsOperations.deleteContacts(id))}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import {\r\n  addContacts,\r\n  deleteContacts,\r\n  fetchContacts,\r\n} from './contactsOperations';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'phoneBook',\r\n  initialState: {\r\n    contacts: [],\r\n    isLoading: false,\r\n    filter: '',\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    changeFilter: (state, action) => {\r\n      state.filter = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled](state, action) {\r\n      state.contacts = action.payload;\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    [fetchContacts.pending](state) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [fetchContacts.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n      console.log(action.payload);\r\n    },\r\n\r\n    [addContacts.fulfilled](state, action) {\r\n      state.contacts.push(action.payload);\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    [addContacts.pending](state) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [addContacts.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n      console.log(action.payload);\r\n    },\r\n\r\n    [deleteContacts.fulfilled](state, action) {\r\n      state.contacts = state.contacts.filter(\r\n        contact => contact.id !== action.payload,\r\n      );\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    [deleteContacts.pending](state) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [deleteContacts.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n      console.log(action.payload);\r\n    },\r\n  },\r\n});\r\nexport default contactsSlice.reducer;\r\nexport const { changeFilter } = contactsSlice.actions;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport { getFilter } from \"../../redux/contacts-selectors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { handleFilterContacts } from \"../../redux/filterReducer\";\r\n\r\n\r\nimport * as contactsSelectors from '../../redux/contacts-selectors';\r\nimport * as contactsOperations  from '../../redux/contactsOperations';\r\nimport { changeFilter } from \"../../redux/slice\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(contactsSelectors.getFilter );\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label_filter}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\n","\r\nimport './Phonebook.module.css';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactLIst/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport s from './Phonebook.module.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n/* import { contactSelector } from '../../redux/slice'; */\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from 'react';\r\nimport * as contactsSelectors from '../../redux/contacts-selectors';\r\nimport * as contactsOperations  from '../../redux/contactsOperations';\r\n\r\n function Phonebook() {\r\n  \r\n     const contacts = useSelector(contactsSelectors.getContacts);\r\n   const dispatch = useDispatch();\r\n   \r\n   useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n   \r\n    return (\r\n        <div className={s.section}>\r\n            <h1 className={s.title}>Phonebook</h1>\r\n            <ContactForm />\r\n\r\n            <h2 className={s.title_contact}>Contacts</h2>\r\n        {contacts.length > 0 && (\r\n          <>\r\n        <Filter />\r\n        <ContactList />\r\n            <ToastContainer />\r\n                 </>\r\n)}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Phonebook","import React from \"react\";\nimport \"./App.css\";\nimport Phonebook from \"./components/Phonebook/Phonebook\";\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport contactsSlice from './slice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phoneBook: contactsSlice,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2nBTL\",\"contactItem\":\"ContactList_contactItem__32v0A\",\"deleteBtn\":\"ContactList_deleteBtn__CY4Xt\"};"],"sourceRoot":""}